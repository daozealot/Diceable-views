.main {
  width: 100vw;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  overflow: auto;
  white-space: nowrap;
}

.btn-reset {
  align-self: center;
  width: 40%;
  flex: 0.2 1 0;
}

.padding {
  padding: 10px;
}

.margin-bottom {
  margin-bottom: 100px;
}

.die-locked {
  background-color: pink;
  border-radius: 20%;
}

.display-flex-center {
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
}

.flex-items {
  align-self: center;
  flex: 1 1 0;
}

.two-dice-view {
  display: flex;
  height: 100%;
  align-content: center;
  flex-direction: column;
  justify-content: center;
}

.navButton {
  border: none;
  background-color: transparent;
  position: absolute;
  right: 0;
  height: 100%;
  width: 20%;
}
.navButtonLeft {
  border: none;
  background-color: transparent;
  position: absolute;
  height: 100%;
  width: 20%;
}

.container {
  display: flex;
  align-content: center;
}

.row {
  display: flex;
  align-items: center;
  flex-direction: column;
  align-content: center;
}

.monster-text {
  height: auto;
  display: flex;
  align-items: center;
  font-size: 1.5rem;
}

.face {
  display: grid;
  grid-template-areas:
    "a . c"
    "e g f"
    "d . b";
  grid-template-rows: repeat(3, 1fr);
  grid-template-columns: repeat(3, 1fr);

  flex: 0 0 auto;
  margin: 0.4rem;
  padding: 0.2504rem;
  width: 2.6rem;
  height: 2.6rem;

  background-color: #e7e7e7;
  box-shadow:
    inset 0 0.1504rem white,
    inset 0 -0.1504rem #bbb,
    inset 0.1504rem 0 #d7d7d7,
    inset -0.1504rem 0 #d7d7d7;
  border-radius: 10%;
}

.pip {
  display: block;
  align-self: center;
  justify-self: center;
  width: 0.6rem;
  height: 0.6rem;
  border-radius: 50%;
  background-color: #333;
  box-shadow:
    inset 0 0.1rem #111,
    inset 0 -0.1rem #555;
}

.pip:nth-child(2) {
  grid-area: b;
}
.pip:nth-child(3) {
  grid-area: c;
}
.pip:nth-child(4) {
  grid-area: d;
}
.pip:nth-child(5) {
  grid-area: e;
}
.pip:nth-child(6) {
  grid-area: f;
}
/* This selects the last pip of odd-valued dice (1, 3, 5) and positions the pip in the center */
.pip:nth-child(odd):last-child {
  grid-area: g;
}
